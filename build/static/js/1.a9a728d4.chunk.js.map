{"version":3,"sources":["components/player/player.js","config/api.js","config/url.js","utils/request.js","services/getData.js","utils/filter.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/player/player.module.scss"],"names":["Player","audioRef","playerLyricsListRef","progressRef","progressBarRef","state","isLoading","duration","progress","elapsed","progressIntervalId","progressMoving","progressBarWidth","startPageX","movePageX","lyrics","lyricIndex","LINE_HEIGHT","lyricIntervalId","getLyrics","songid","_this","props","song","setState","then","res","lyric","formatText","match","Array","isArray","Object","D_test_js_20190105_qq_music_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","catch","err","console","error","onPlay","_this$props","isPlay","setPlayState","pause","pauseLyrics","pauseProgress","play","startLyrics","startProgress","handleOnAudioEnd","restartLyrics","resetProgress","setInterval","updateLyrics","clearInterval","_self","D_test_js_20190105_qq_music_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","ontimeupdate","e","i","len","length","currentTime","getSeconds","children","classList","remove","add","y","style","transform","concat","resetLyrics","updateProgress","_this$state","nextElapsed","stateParam","restartProgress","progressTouchStart","touches","pageX","startOffsetLeft","target","offsetLeft","offsetWidth","progressTouchMove","moveDisctance","Math","min","max","floor","progressTouchEnd","this","interval","line","replace","p1","p2","parseFloat","text","div","document","createElement","innerHTML","innerText","id","albumCoverUrl","songUrl","_this2","_this$props2","isShowPlayer","artist","_this$state2","_this$state2$lyrics","react__WEBPACK_IMPORTED_MODULE_7___default","a","react__WEBPACK_IMPORTED_MODULE_7__","className","styles","src","getAlbumCover","albummid","alt","songname","onClick","ref","map","item","index","key","slice","formatTime","bar","onTouchStart","onTouchMove","onTouchEnd","backgroundImage","getSongUrl","songmid","audio","onEnded","PureComponent","connect","ownProps","app","dispatch","getSong","type","payload","showPlayer","cancelPlayer","flag","__webpack_require__","d","__webpack_exports__","RECOMMEND_URL","TOPLIST_URL","SEARCH_URL","LYRICS_URL","HOTKEYS_URL","lyricsUrl","searchUrl","_api__WEBPACK_IMPORTED_MODULE_0__","keyword","page","arguments","undefined","axios","defaults","headers","common","service","create","timeout","transformRequest","data","querystring","stringify","Content-Type","interceptors","request","use","config","token","Promise","reject","response","status","message","resolve","getData_getRecommendList","getData_getRankList","getData_getHotList","getData_getSearchList","getData_getLyrics","getRecommendList","url","getRankList","getHotList","getSearchList","dealNum","num","toFixed","seconds","mins","secs","_toConsumableArray","arr","arr2","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","module","exports","player","player_container","player_header","album_cover","song_info","song_name","song_artist","icon_action","icon_play","icon_pause","player_lyrics","player_lyrics_list","player_lyrics_item","player_footer","icon_collect","progress_bar","progress_bar_progress","progress_time","action","btn_download","player_background"],"mappings":"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","file":"static/js/1.a9a728d4.chunk.js","sourcesContent":["import React, { PureComponent, Fragment } from 'react'\r\nimport { connect } from 'dva'\r\n\r\nimport { songUrl, albumCoverUrl } from '../../config/url'\r\nimport { getLyrics } from '../../services/getData'\r\nimport { formatTime } from '../../utils/filter'\r\n\r\nimport styles from './player.module.scss'\r\nclass Player extends PureComponent {\r\n  audioRef = null\r\n  playerLyricsListRef = null\r\n  progressRef = null\r\n  progressBarRef = null\r\n  state = {\r\n    isLoading: false,\r\n\r\n    duration: 0, // 音乐持续时间\r\n    progress: 0, // 进度条\r\n    elapsed: 0, // 当前时间\r\n    progressIntervalId: 0, // 进度条setInterval 返回的 id\r\n\r\n    progressMoving: false,\r\n    progressBarWidth: 0,\r\n    startPageX: 0,\r\n    movePageX: 0,\r\n\r\n    lyrics: [], // 歌词\r\n    lyricIndex: 0, // 歌词页数\r\n    LINE_HEIGHT: 42, // 歌词的高度(跟css中定义的每一行的歌词高度一致（.player_lyrics_item）)\r\n    lyricIntervalId: 0 // 歌词setInterval 返回的 id\r\n  }\r\n  componentDidMount() {\r\n    const { song } = this.props\r\n    this.setState({\r\n      duration: song.interval\r\n    })\r\n    this.getLyrics()\r\n  }\r\n  componentWillUnmount() {\r\n    try {\r\n      const { setPlayState } = this.props\r\n      this.audioRef.pause()\r\n      setPlayState(false)\r\n      this.pauseLyrics()\r\n      this.pauseProgress()\r\n    } catch (error) {}\r\n  }\r\n  getLyrics = () => {\r\n    const { songid } = this.props.song\r\n    this.setState({ isLoading: true })\r\n    getLyrics(songid)\r\n      .then(res => {\r\n        let { lyric } = res\r\n        lyric = this.formatText(lyric).match(/^\\[\\d{2}:\\d{2}.\\d{2}\\](.+)$/gm)\r\n        this.setState({\r\n          lyricIndex: 0,\r\n          lyrics: Array.isArray(lyric) ? [...lyric] : []\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.error(err)\r\n      })\r\n      .then(() => {\r\n        this.setState({ isLoading: false })\r\n      })\r\n  }\r\n  //获取秒数\r\n  getSeconds(line) {\r\n    return +line.replace(/^\\[(\\d{2}):(\\d{2}\\.\\d{2}).*/, (match, p1, p2) => +p1 * 60 + parseFloat(+p2))\r\n  }\r\n  //格式化文本 类似[xx:xx.xx]xxxxx\r\n  formatText(text) {\r\n    let div = document.createElement('div')\r\n    div.innerHTML = text\r\n    return div.innerText\r\n  }\r\n  // 获取图片地址\r\n  getAlbumCover(id) {\r\n    return albumCoverUrl(id)\r\n  }\r\n  // 获取歌词地址\r\n  getSongUrl(id) {\r\n    return songUrl(id)\r\n  }\r\n  // 播放音频\r\n  onPlay = () => {\r\n    const { isPlay, setPlayState } = this.props\r\n    // 点击暂停\r\n    if (isPlay) {\r\n      try {\r\n        this.audioRef.pause()\r\n        setPlayState(false)\r\n        this.pauseLyrics()\r\n        this.pauseProgress()\r\n      } catch (error) {}\r\n    } else {\r\n      if (this.state.isLoading) return\r\n      try {\r\n        this.audioRef.play()\r\n        setPlayState(true)\r\n        this.startLyrics()\r\n        this.startProgress()\r\n      } catch (error) {}\r\n    }\r\n  }\r\n  // 当一首歌播放结束的时候重新播放\r\n  handleOnAudioEnd = () => {\r\n    try {\r\n      this.audioRef.play()\r\n      this.restartLyrics()\r\n      this.resetProgress()\r\n    } catch (error) {}\r\n  }\r\n  // 开始播放歌词\r\n  startLyrics = () => {\r\n    this.pauseLyrics()\r\n    this.setState({\r\n      lyricIntervalId: setInterval(this.updateLyrics, 1000)\r\n    })\r\n  }\r\n  // 暂停歌词\r\n  pauseLyrics = () => {\r\n    clearInterval(this.state.lyricIntervalId)\r\n  }\r\n  // 更新歌词\r\n  updateLyrics = () => {\r\n    let _self = this\r\n    try {\r\n      this.audioRef.ontimeupdate = function(e) {\r\n        for (let i = 0, len = _self.state.lyrics.length; i < len; i++) {\r\n          if (_self.audioRef.currentTime /*当前播放的时间*/ > _self.getSeconds(_self.state.lyrics[i]) - 0.5) {\r\n            _self.playerLyricsListRef.children[_self.state.lyricIndex] &&\r\n              _self.playerLyricsListRef.children[_self.state.lyricIndex].classList.remove('active')\r\n            _self.playerLyricsListRef.children[i] && _self.playerLyricsListRef.children[i].classList.add('active')\r\n            _self.setState({ lyricIndex: i })\r\n          }\r\n        }\r\n      }\r\n      if (this.state.lyricIndex > 2) {\r\n        let y = -(this.state.lyricIndex - 2) * this.state.LINE_HEIGHT\r\n        this.playerLyricsListRef.style.transform = `translateY(${y}px)`\r\n      }\r\n    } catch (error) {}\r\n  }\r\n  // 重置歌词\r\n  resetLyrics = () => {\r\n    this.pauseLyrics()\r\n    this.playerLyricsListRef.children[this.state.lyricIndex] &&\r\n      this.playerLyricsListRef.children[this.state.lyricIndex].classList.remove('active')\r\n    this.setState({ lyricIndex: 0 })\r\n    this.playerLyricsListRef.style.transform = `translateY(0)`\r\n    if (this.state.lyrics.length) {\r\n      this.playerLyricsListRef.children[0] && this.playerLyricsListRef.children[0].classList.add('active')\r\n    }\r\n  }\r\n  // 重新开始歌词\r\n  restartLyrics = () => {\r\n    this.resetLyrics()\r\n    this.startLyrics()\r\n  }\r\n  // 启动进度条\r\n  startProgress = () => {\r\n    this.pauseProgress()\r\n    this.setState({\r\n      progressIntervalId: setInterval(this.updateProgress, 50)\r\n    })\r\n  }\r\n  // 暂停进度条\r\n  pauseProgress = () => {\r\n    clearInterval(this.state.progressIntervalId)\r\n  }\r\n  // 更新进度条\r\n  updateProgress = () => {\r\n    const { elapsed, duration } = this.state\r\n    const nextElapsed = elapsed + 0.05 // 下一帧的时间\r\n    this.setState({\r\n      elapsed: nextElapsed,\r\n      progress: nextElapsed / duration\r\n    })\r\n\r\n    this.progressRef.style.transform = `translateX(${this.state.progress * 100 - 100}%)`\r\n  }\r\n  // 重置进度条\r\n  resetProgress = duration => {\r\n    this.pauseProgress()\r\n    const stateParam = {\r\n      elapsed: 0,\r\n      progress: 0\r\n    }\r\n    if (duration) {\r\n      stateParam.duration = +duration\r\n    }\r\n    this.setState(stateParam)\r\n    this.progressRef.style.transform = 'translateX(-100%)'\r\n  }\r\n  // 重新开始进度条\r\n  restartProgress = () => {\r\n    this.resetProgress()\r\n    this.startProgress()\r\n  }\r\n\r\n  // 触摸开始滚动条，记录初始触摸进度\r\n  progressTouchStart = e => {\r\n    this.setState({\r\n      progressMoving: true,\r\n      startPageX: e.touches[0].pageX,\r\n      startOffsetLeft: e.target.offsetLeft,\r\n      progressBarWidth: this.progressBarRef.offsetWidth\r\n    })\r\n  }\r\n\r\n  // 一直触摸滚动条移动时，更新进度条的状态\r\n  progressTouchMove = e => {\r\n    const movePageX = e.touches[0].pageX\r\n    const moveDisctance = Math.min(\r\n      this.state.progressBarWidth,\r\n      Math.max(0, this.state.startOffsetLeft + (movePageX - this.state.startPageX))\r\n    )\r\n    const dataProgress = Math.floor((moveDisctance / this.state.progressBarWidth) * 100)\r\n    const elapsed = (dataProgress * this.state.duration) / 100\r\n    // this.audioRef.currentTime = elapsed\r\n    this.setState({ movePageX, elapsed })\r\n  }\r\n\r\n  // 触摸进度条完成，更新播放器的播放时间进度\r\n  progressTouchEnd = e => {\r\n    this.setState({\r\n      progressMoving: false\r\n    })\r\n    this.audioRef.currentTime = this.state.elapsed\r\n  }\r\n\r\n  render() {\r\n    const { isShowPlayer, isPlay, song, artist } = this.props\r\n    const { lyrics = [], elapsed, isLoading } = this.state\r\n    return (\r\n      <Fragment>\r\n        {isShowPlayer && (\r\n          <div className={`${styles['player']}`}>\r\n            <div className={styles['player_container']}>\r\n              <div className={styles['player_header']}>\r\n                {/* 缺少头像 */}\r\n                <img className={styles['album_cover']} src={this.getAlbumCover(song.albummid)} alt={song.songname} />\r\n                <div className={styles['song_info']}>\r\n                  <div className={styles['song_name']}>{song.songname}</div>\r\n                  <div className={styles['song_artist']}>{artist}</div>\r\n                </div>\r\n                <i\r\n                  className={`${styles['icon_action']} ${styles[isPlay ? 'icon_pause' : 'icon_play']}`}\r\n                  onClick={this.onPlay}\r\n                />\r\n              </div>\r\n\r\n              <div className={styles['player_lyrics']}>\r\n                <div className={styles['player_lyrics_list']} ref={lyric => (this.playerLyricsListRef = lyric)}>\r\n                  {lyrics &&\r\n                    lyrics.length > 0 &&\r\n                    lyrics.map((item, index) => (\r\n                      <div className={styles['player_lyrics_item']} key={index}>\r\n                        {item.slice(10)}\r\n                      </div>\r\n                    ))}\r\n                  {isLoading && <div className={styles['player_lyrics_item']}>正在加载歌词,请等待...</div>}\r\n                </div>\r\n              </div>\r\n\r\n              <div className={styles['player_footer']}>\r\n                <i className={styles['icon_collect']} />\r\n                <div className={styles['progress']}>\r\n                  <div className={`${styles['progress_time']} ${styles['progress_elapsed']}`}>\r\n                    {formatTime(elapsed)}\r\n                  </div>\r\n                  <div className={styles['progress_bar']} ref={bar => (this.progressBarRef = bar)}>\r\n                    <div\r\n                      className={styles['progress_bar_progress']}\r\n                      ref={progress => (this.progressRef = progress)}\r\n                      onTouchStart={this.progressTouchStart}\r\n                      onTouchMove={this.progressTouchMove}\r\n                      onTouchEnd={this.progressTouchEnd}\r\n                    />\r\n                  </div>\r\n                  <div className={`${styles['progress_time']} ${styles['progress_duration']}`}>\r\n                    {formatTime(song.interval)}\r\n                  </div>\r\n                </div>\r\n                <div className={styles['action']}>\r\n                  <span className={styles['btn_download']}>下载这首歌</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className={styles['player_background']}\r\n              style={{ backgroundImage: 'url(' + this.getAlbumCover(song.albummid) + ')' }}\r\n            />\r\n            <audio\r\n              src={this.getSongUrl(song.songmid)}\r\n              ref={audio => (this.audioRef = audio)}\r\n              onEnded={this.handleOnAudioEnd}\r\n            />\r\n          </div>\r\n        )}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    isShowPlayer: state.app.isShowPlayer,\r\n    isPlay: state.app.isPlay,\r\n    song: state.app.song,\r\n    artist: state.app.artist\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    getSong: song => {\r\n      dispatch({ type: 'app/getSong', payload: song })\r\n    },\r\n    showPlayer: () => {\r\n      dispatch({ type: 'app/showPlayer' })\r\n    },\r\n    cancelPlayer: () => {\r\n      dispatch({ type: 'app/cancelPlayer' })\r\n    },\r\n    setPlayState: flag => {\r\n      dispatch({ type: 'app/setPlayState', payload: flag })\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Player)\r\n","export const RECOMMEND_URL = 'https://shenzekun-qmusic-api.now.sh/';\r\nexport const TOPLIST_URL = 'https://shenzekun-qmusic-api.now.sh/top';\r\nexport const SEARCH_URL = 'https://shenzekun-qmusic-api.now.sh/search';\r\nexport const LYRICS_URL = 'https://shenzekun-qmusic-api.now.sh/lyrics';\r\nexport const HOTKEYS_URL = 'https://shenzekun-qmusic-api.now.sh/hotkey';\r\n","import { LYRICS_URL, SEARCH_URL } from './api'\r\n\r\n// 歌url\r\nexport function songUrl(id) {\r\n  // return `http://ws.stream.qqmusic.qq.com/${id}.m4a?fromtag=46`;\r\n  return `https://api.bzqll.com/music/tencent/url?key=579621905&id=${id}`\r\n}\r\n\r\n// 歌词 url\r\nexport function lyricsUrl(songid) {\r\n  return `${LYRICS_URL}?id=${songid}`\r\n}\r\n\r\n// 相册\r\nexport function albumCoverUrl(id) {\r\n  return `https://y.gtimg.cn/music/photo_new/T002R150x150M000${id}.jpg`\r\n}\r\n\r\n// 处理搜索的 url\r\n// @param {any} keyword 用户输入的数据\r\n// @param {number} [page=1]  页数默认为1\r\nexport function searchUrl(keyword, page = 1) {\r\n  return `${SEARCH_URL}?keyword=${keyword}&page=${page}`\r\n}\r\n","import axios from 'axios'\r\nimport querystring from 'querystring'\r\n\r\n//设置默认请求头\r\naxios.defaults.headers.common['Content-Type'] =\r\n  'application/x-www-form-urlencoded';\r\n// 发送请求前处理request的数据\r\n// axios.defaults.transformRequest = [\r\n//   function(data) {\r\n//     return querystring.stringify(data);\r\n//   }\r\n// ];\r\n// 带cookie请求 axios.defaults.withCredentials = true;\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  timeout: 30000, // 请求超时时间\r\n  transformRequest: [\r\n    function (data) {\r\n      // Do whatever you want to transform the data\r\n      return querystring.stringify(data);\r\n    }\r\n  ],\r\n  headers: {\r\n    'Content-Type': 'application/x-www-form-urlencoded'\r\n  }\r\n});\r\n\r\n// request拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    const token = '';\r\n    if (!config.data) {\r\n      config.data = {};\r\n    }\r\n    config.data.token = token || '';\r\n    // if (config.method === 'post') {   // 序列化   config.data =\r\n    // querystring.stringify(config.data); }\r\n    return config;\r\n  },\r\n  error => {\r\n    // Do something with request error console.log(error); // for debug\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// respone拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    return response.data;\r\n  },\r\n  err => {\r\n\r\n    if (err && err.response) {\r\n      switch (err.response.status) {\r\n        case 400:\r\n          err.message = '错误请求';\r\n          break;\r\n        case 401:\r\n          err.message = '未授权，请重新登录';\r\n          break;\r\n        case 403:\r\n          err.message = '拒绝访问';\r\n          break;\r\n        case 404:\r\n          err.message = '请求错误,未找到该资源';\r\n          break;\r\n        case 405:\r\n          err.message = '请求方法未允许';\r\n          break;\r\n        case 408:\r\n          err.message = '请求超时';\r\n          break;\r\n        case 500:\r\n          err.message = '服务器端出错';\r\n          break;\r\n        case 501:\r\n          err.message = '网络未实现';\r\n          break;\r\n        case 502:\r\n          err.message = '网络错误';\r\n          break;\r\n        case 503:\r\n          err.message = '服务不可用';\r\n          break;\r\n        case 504:\r\n          err.message = '网络超时';\r\n          break;\r\n        case 505:\r\n          err.message = 'http版本不支持该请求';\r\n          break;\r\n        default:\r\n          err.message = `连接错误${err.response.status}`;\r\n      }\r\n    } else {\r\n      err.message = '连接到服务器失败';\r\n    }\r\n    return Promise.resolve(err.response);\r\n    // return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default service;\r\n","import request from '../utils/request'\r\nimport { RECOMMEND_URL, TOPLIST_URL, HOTKEYS_URL } from '../config/api'\r\nimport { searchUrl, lyricsUrl } from '../config/url'\r\n\r\n// 获取推荐\r\nexport const getRecommendList = () => {\r\n  return request({\r\n    url: RECOMMEND_URL\r\n  })\r\n}\r\n\r\n// 获取排行榜\r\nexport const getRankList = () => {\r\n  return request({\r\n    url: TOPLIST_URL\r\n  })\r\n}\r\n\r\n// 获取热门搜索关键词\r\nexport const getHotList = () => {\r\n  return request({\r\n    url: HOTKEYS_URL\r\n  })\r\n}\r\n\r\n// 获取搜索内容\r\nexport const getSearchList = (keyword, page) => {\r\n  return request({\r\n    url: searchUrl(keyword, page)\r\n  })\r\n}\r\n\r\n// 获取歌词\r\nexport const getLyrics = songid => {\r\n  return request({\r\n    url: lyricsUrl(songid)\r\n  })\r\n}\r\n","// 格式化万单位的数字\r\nexport const dealNum = num => {\r\n  if (typeof num === 'number') {\r\n    if (num > 10000) {\r\n      return (num / 10000).toFixed(1) + '万'\r\n    }\r\n  }\r\n  return num\r\n}\r\n\r\n// 格式化时间\r\nexport const formatTime = seconds => {\r\n  let mins = Math.floor(seconds / 60)\r\n  let secs = Math.floor(seconds % 60)\r\n  if (mins < 10) {\r\n    mins = '0' + mins\r\n  }\r\n  if (secs < 10) {\r\n    secs = '0' + secs\r\n  }\r\n  return `${mins}:${secs}`\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"player_player__1oe6v\",\"player_container\":\"player_player_container__3ySOq\",\"player_header\":\"player_player_header__25Oxv\",\"album_cover\":\"player_album_cover__1o6qa\",\"song_info\":\"player_song_info__2j-fY\",\"song_name\":\"player_song_name__3VY63\",\"song_artist\":\"player_song_artist__2S8Yu\",\"icon_action\":\"player_icon_action__2F4Ey\",\"icon_play\":\"player_icon_play__FdpZY\",\"icon_pause\":\"player_icon_pause__2uRzj\",\"player_lyrics\":\"player_player_lyrics__2tu5u\",\"player_lyrics_list\":\"player_player_lyrics_list__14bnJ\",\"player_lyrics_item\":\"player_player_lyrics_item__3nmZS\",\"player_footer\":\"player_player_footer__s3r4B\",\"icon_collect\":\"player_icon_collect__1gYaS\",\"progress\":\"player_progress__2vDAp\",\"progress_bar\":\"player_progress_bar__3VsNH\",\"progress_bar_progress\":\"player_progress_bar_progress__3N72v\",\"progress_time\":\"player_progress_time__sgxDZ\",\"action\":\"player_action__GDjd_\",\"btn_download\":\"player_btn_download__1d_Qz\",\"player_background\":\"player_player_background__3BMqs\"};"],"sourceRoot":""}